Archive member included to satisfy reference by file (symbol)

/usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
                              /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o (exit)
/usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
                              iambic.o (__do_copy_data)
/usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
                              iambic.o (__do_clear_bss)

Discarded input sections

 .data          0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
 .bss           0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
 .text          0x0000000000000000        0x0 iambic.o
 .data          0x0000000000000000        0xa iambic.o
 .text          0x0000000000000000        0x0 usb_keyboard_debug.o
 .text.usb_debug_flush_output
                0x0000000000000000       0x2e usb_keyboard_debug.o
 .text          0x0000000000000000        0x0 print.o
 .data          0x0000000000000000        0x0 print.o
 .bss           0x0000000000000000        0x0 print.o
 .text.phex16   0x0000000000000000       0x12 print.o
 .text          0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .data          0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
LOAD iambic.o
LOAD usb_keyboard_debug.o
LOAD print.o
LOAD /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/libm.a
START GROUP
LOAD /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a
LOAD /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/libm.a
LOAD /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/libc.a
LOAD /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/libatmega32u4.a
END GROUP
                0x0000000000020000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                0x0000000000000400                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xa62
 *(.vectors)
 .vectors       0x0000000000000000       0xac /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x00000000000000ac                . = ALIGN (0x2)
                0x00000000000000ac                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000ac        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000ac                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem.*)
 .progmem.data  0x00000000000000ac      0x10d iambic.o
 .progmem.data  0x00000000000001b9      0x112 usb_keyboard_debug.o
                0x00000000000002cc                . = ALIGN (0x2)
 *fill*         0x00000000000002cb        0x1 
 *(.lowtext)
 *(.lowtext*)
                0x00000000000002cc                __ctors_start = .
 *(.ctors)
                0x00000000000002cc                __ctors_end = .
                0x00000000000002cc                __dtors_start = .
 *(.dtors)
                0x00000000000002cc                __dtors_end = .
 SORT_BY_NAME(*)(.ctors)
 SORT_BY_NAME(*)(.dtors)
 *(.init0)
 .init0         0x00000000000002cc        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
                0x00000000000002cc                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000002cc        0xc /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000002d8       0x16 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
                0x00000000000002d8                __do_copy_data
 .init4         0x00000000000002ee       0x10 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
                0x00000000000002ee                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000002fe        0x4 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
 *(.init9)
 *(.text)
 .text          0x0000000000000302        0x2 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
                0x0000000000000302                __vector_42
                0x0000000000000302                __vector_22
                0x0000000000000302                __vector_28
                0x0000000000000302                __vector_1
                0x0000000000000302                __vector_32
                0x0000000000000302                __vector_34
                0x0000000000000302                __vector_24
                0x0000000000000302                __vector_12
                0x0000000000000302                __bad_interrupt
                0x0000000000000302                __vector_6
                0x0000000000000302                __vector_31
                0x0000000000000302                __vector_35
                0x0000000000000302                __vector_39
                0x0000000000000302                __vector_3
                0x0000000000000302                __vector_23
                0x0000000000000302                __vector_30
                0x0000000000000302                __vector_25
                0x0000000000000302                __vector_13
                0x0000000000000302                __vector_17
                0x0000000000000302                __vector_19
                0x0000000000000302                __vector_7
                0x0000000000000302                __vector_41
                0x0000000000000302                __vector_27
                0x0000000000000302                __vector_5
                0x0000000000000302                __vector_33
                0x0000000000000302                __vector_37
                0x0000000000000302                __vector_4
                0x0000000000000302                __vector_9
                0x0000000000000302                __vector_2
                0x0000000000000302                __vector_21
                0x0000000000000302                __vector_15
                0x0000000000000302                __vector_36
                0x0000000000000302                __vector_29
                0x0000000000000302                __vector_40
                0x0000000000000302                __vector_8
                0x0000000000000302                __vector_26
                0x0000000000000302                __vector_14
                0x0000000000000302                __vector_16
                0x0000000000000302                __vector_18
                0x0000000000000302                __vector_20
                0x0000000000000302                __vector_38
                0x0000000000000304                . = ALIGN (0x2)
 *(.text.*)
 .text.led_on   0x0000000000000304        0x6 iambic.o
 .text.led_off  0x000000000000030a        0x6 iambic.o
 .text.busy_wait
                0x0000000000000310       0x64 iambic.o
 .text.bad_input
                0x0000000000000374       0x2a iambic.o
 .text.startup.main
                0x000000000000039e      0x146 iambic.o
                0x000000000000039e                main
 .text.usb_wait_in_ready
                0x00000000000004e4        0xa usb_keyboard_debug.o
 .text.usb_init
                0x00000000000004ee       0x2e usb_keyboard_debug.o
                0x00000000000004ee                usb_init
 .text.usb_configured
                0x000000000000051c        0x6 usb_keyboard_debug.o
                0x000000000000051c                usb_configured
 .text.usb_keyboard_send
                0x0000000000000522       0x70 usb_keyboard_debug.o
                0x0000000000000522                usb_keyboard_send
 .text.usb_keyboard_press
                0x0000000000000592       0x1a usb_keyboard_debug.o
                0x0000000000000592                usb_keyboard_press
 .text.usb_debug_putchar
                0x00000000000005ac       0x86 usb_keyboard_debug.o
                0x00000000000005ac                usb_debug_putchar
 .text.__vector_10
                0x0000000000000632       0xe2 usb_keyboard_debug.o
                0x0000000000000632                __vector_10
 .text.__vector_11
                0x0000000000000714      0x304 usb_keyboard_debug.o
                0x0000000000000714                __vector_11
 .text.print_P  0x0000000000000a18       0x28 print.o
                0x0000000000000a18                print_P
 .text.phex1    0x0000000000000a40        0xc print.o
                0x0000000000000a40                phex1
 .text.phex     0x0000000000000a4c       0x12 print.o
                0x0000000000000a4c                phex
                0x0000000000000a5e                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000a5e        0x0 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
                0x0000000000000a5e                exit
                0x0000000000000a5e                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000a5e        0x4 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
 *(.hightext)
 *(.hightext*)
 *(.progmemx.*)
                0x0000000000000a62                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
                0x0000000000000a62                _etext = .

.data           0x0000000000800100        0x2 load address 0x0000000000000a62
                0x0000000000800100                PROVIDE (__data_start = .)
 *(.data)
 .data          0x0000000000800100        0x2 usb_keyboard_debug.o
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.r*)
                0x0000000000800102                . = ALIGN (0x2)
                0x0000000000800102                _edata = .
                0x0000000000800102                PROVIDE (__data_end = .)

.bss            0x0000000000800102       0x13
                0x0000000000800102                PROVIDE (__bss_start = .)
 *(.bss)
 .bss           0x0000000000800102        0x6 iambic.o
                0x0000000000800102                idle_count
 .bss           0x0000000000800108        0xd usb_keyboard_debug.o
                0x0000000000800108                keyboard_leds
                0x0000000000800109                keyboard_keys
                0x000000000080010f                keyboard_modifier_keys
 *(.bss*)
 *(COMMON)
                0x0000000000800115                PROVIDE (__bss_end = .)
                0x0000000000000a62                __data_load_start = LOADADDR (.data)
                0x0000000000000a64                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800115        0x0
                [!provide]                        PROVIDE (__noinit_start = .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end = .)
                0x0000000000800115                _end = .
                [!provide]                        PROVIDE (__heap_start = .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 iambic.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 usb_keyboard_debug.o
 .comment       0x0000000000000011       0x12 print.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x40
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x40 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000      0x138
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x40 iambic.o
 .debug_aranges
                0x0000000000000040       0x60 usb_keyboard_debug.o
 .debug_aranges
                0x00000000000000a0       0x38 print.o
 .debug_aranges
                0x00000000000000d8       0x20 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .debug_aranges
                0x00000000000000f8       0x20 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
 .debug_aranges
                0x0000000000000118       0x20 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000     0x1f0d
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x9f4 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
 .debug_info    0x00000000000009f4      0x8a2 iambic.o
 .debug_info    0x0000000000001296      0x9b0 usb_keyboard_debug.o
 .debug_info    0x0000000000001c46      0x255 print.o
 .debug_info    0x0000000000001e9b       0x26 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .debug_info    0x0000000000001ec1       0x26 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
 .debug_info    0x0000000000001ee7       0x26 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)

.debug_abbrev   0x0000000000000000     0x1097
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x96a /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
 .debug_abbrev  0x000000000000096a      0x32d iambic.o
 .debug_abbrev  0x0000000000000c97      0x26f usb_keyboard_debug.o
 .debug_abbrev  0x0000000000000f06      0x155 print.o
 .debug_abbrev  0x000000000000105b       0x14 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .debug_abbrev  0x000000000000106f       0x14 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
 .debug_abbrev  0x0000000000001083       0x14 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)

.debug_line     0x0000000000000000     0x21a5
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
 .debug_line    0x000000000000001d      0x80f iambic.o
 .debug_line    0x000000000000082c     0x162a usb_keyboard_debug.o
 .debug_line    0x0000000000001e56      0x1d2 print.o
 .debug_line    0x0000000000002028       0x61 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .debug_line    0x0000000000002089       0x97 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
 .debug_line    0x0000000000002120       0x85 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)

.debug_frame    0x0000000000000000      0x210
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x84 iambic.o
 .debug_frame   0x0000000000000084      0x118 usb_keyboard_debug.o
 .debug_frame   0x000000000000019c       0x74 print.o

.debug_str      0x0000000000000000      0x959
 *(.debug_str)
 .debug_str     0x0000000000000000      0x371 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
 .debug_str     0x0000000000000371      0x2f8 iambic.o
                                        0x346 (size before relaxing)
 .debug_str     0x0000000000000669      0x258 usb_keyboard_debug.o
                                        0x449 (size before relaxing)
 .debug_str     0x00000000000008c1       0x15 print.o
                                        0x1c5 (size before relaxing)
 .debug_str     0x00000000000008d6       0x83 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .debug_str     0x0000000000000959       0x83 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
 .debug_str     0x0000000000000959       0x83 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)

.debug_loc      0x0000000000000000     0x11d1
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x3bc iambic.o
 .debug_loc     0x00000000000003bc      0xc32 usb_keyboard_debug.o
 .debug_loc     0x0000000000000fee      0x1e3 print.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000      0x148
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x50 iambic.o
 .debug_ranges  0x0000000000000050       0xd0 usb_keyboard_debug.o
 .debug_ranges  0x0000000000000120       0x28 print.o

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)
OUTPUT(iambic.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__bss_end                                         /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
__data_end                                        /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
__data_start                                      /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
                                                  usb_keyboard_debug.o
                                                  iambic.o
__do_copy_data                                    /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
                                                  usb_keyboard_debug.o
                                                  iambic.o
__heap_end                                        /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__init                                            /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__stack                                           /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_1                                        /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_10                                       usb_keyboard_debug.o
                                                  /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_11                                       usb_keyboard_debug.o
                                                  /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_12                                       /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_13                                       /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_14                                       /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_15                                       /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_16                                       /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_17                                       /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_18                                       /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_19                                       /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_2                                        /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_20                                       /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_21                                       /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_22                                       /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_23                                       /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_24                                       /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_25                                       /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_26                                       /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_27                                       /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_28                                       /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_29                                       /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_3                                        /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_30                                       /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_31                                       /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_32                                       /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_33                                       /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_34                                       /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_35                                       /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_36                                       /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_37                                       /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_38                                       /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_39                                       /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_4                                        /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_40                                       /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_41                                       /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_42                                       /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_5                                        /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_6                                        /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_7                                        /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_8                                        /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_9                                        /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vector_default                                  /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
__vectors                                         /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
_exit                                             /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
exit                                              /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
                                                  /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
idle_count                                        iambic.o
keyboard_keys                                     usb_keyboard_debug.o
keyboard_leds                                     usb_keyboard_debug.o
keyboard_modifier_keys                            usb_keyboard_debug.o
main                                              iambic.o
                                                  /usr/local/Cellar/avr-gcc/9.2.0_1/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32u4.o
number_keys                                       iambic.o
phex                                              print.o
                                                  iambic.o
phex1                                             print.o
phex16                                            print.o
print_P                                           print.o
                                                  iambic.o
usb_configured                                    usb_keyboard_debug.o
                                                  iambic.o
usb_debug_flush_output                            usb_keyboard_debug.o
usb_debug_putchar                                 usb_keyboard_debug.o
                                                  print.o
                                                  iambic.o
usb_init                                          usb_keyboard_debug.o
                                                  iambic.o
usb_keyboard_press                                usb_keyboard_debug.o
                                                  iambic.o
usb_keyboard_send                                 usb_keyboard_debug.o
